/*
 * generated by Xtext 2.23.0
 */
grammar InternalGpx;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package tdt4250.ganttproject.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package tdt4250.ganttproject.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import tdt4250.ganttproject.services.GpxGrammarAccess;

}
@parser::members {
	private GpxGrammarAccess grammarAccess;

	public void setGrammarAccess(GpxGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProject
entryRuleProject
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectAccess().getGroup()); }
		(rule__Project__Group__0)
		{ after(grammarAccess.getProjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractTask
entryRuleAbstractTask
:
{ before(grammarAccess.getAbstractTaskRule()); }
	 ruleAbstractTask
{ after(grammarAccess.getAbstractTaskRule()); } 
	 EOF 
;

// Rule AbstractTask
ruleAbstractTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTaskAccess().getAlternatives()); }
		(rule__AbstractTask__Alternatives)
		{ after(grammarAccess.getAbstractTaskAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMilestone
entryRuleMilestone
:
{ before(grammarAccess.getMilestoneRule()); }
	 ruleMilestone
{ after(grammarAccess.getMilestoneRule()); } 
	 EOF 
;

// Rule Milestone
ruleMilestone 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMilestoneAccess().getGroup()); }
		(rule__Milestone__Group__0)
		{ after(grammarAccess.getMilestoneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDependency
entryRuleDependency
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependencyAccess().getGroup()); }
		(rule__Dependency__Group__0)
		{ after(grammarAccess.getDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDate
entryRuleDate
:
{ before(grammarAccess.getDateRule()); }
	 ruleDate
{ after(grammarAccess.getDateRule()); } 
	 EOF 
;

// Rule Date
ruleDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateAccess().getGroup()); }
		(rule__Date__Group__0)
		{ after(grammarAccess.getDateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DURATION_UNIT
ruleDURATION_UNIT
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDURATION_UNITAccess().getAlternatives()); }
		(rule__DURATION_UNIT__Alternatives)
		{ after(grammarAccess.getDURATION_UNITAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTask__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTaskAccess().getTaskParserRuleCall_0()); }
		ruleTask
		{ after(grammarAccess.getAbstractTaskAccess().getTaskParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTaskAccess().getMilestoneParserRuleCall_1()); }
		ruleMilestone
		{ after(grammarAccess.getAbstractTaskAccess().getMilestoneParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DURATION_UNIT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDURATION_UNITAccess().getDAYEnumLiteralDeclaration_0()); }
		('day')
		{ after(grammarAccess.getDURATION_UNITAccess().getDAYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDURATION_UNITAccess().getDAYEnumLiteralDeclaration_1()); }
		('days')
		{ after(grammarAccess.getDURATION_UNITAccess().getDAYEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDURATION_UNITAccess().getWEEKEnumLiteralDeclaration_2()); }
		('week')
		{ after(grammarAccess.getDURATION_UNITAccess().getWEEKEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDURATION_UNITAccess().getWEEKEnumLiteralDeclaration_3()); }
		('weeks')
		{ after(grammarAccess.getDURATION_UNITAccess().getWEEKEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__0__Impl
	rule__Project__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
	'Project'
	{ after(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__1__Impl
	rule__Project__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getNameAssignment_1()); }
	(rule__Project__NameAssignment_1)
	{ after(grammarAccess.getProjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getGroup_2()); }
	(rule__Project__Group_2__0)?
	{ after(grammarAccess.getProjectAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group_2__0__Impl
	rule__Project__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getTasksAssignment_2_0()); }
	(rule__Project__TasksAssignment_2_0)
	{ after(grammarAccess.getProjectAccess().getTasksAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getGroup_2_1()); }
	(rule__Project__Group_2_1__0)*
	{ after(grammarAccess.getProjectAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group_2_1__0__Impl
	rule__Project__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getSemicolonKeyword_2_1_0()); }
	';'
	{ after(grammarAccess.getProjectAccess().getSemicolonKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getTasksAssignment_2_1_1()); }
	(rule__Project__TasksAssignment_2_1_1)
	{ after(grammarAccess.getProjectAccess().getTasksAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
	'Task'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
	(rule__Task__NameAssignment_1)
	{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_2()); }
	(rule__Task__Group_2__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_3()); }
	(rule__Task__Group_3__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_4()); }
	(rule__Task__Group_4__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_5()); }
	(rule__Task__Group_5__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_6()); }
	(rule__Task__Group_6__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_2__0__Impl
	rule__Task__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getLastsKeyword_2_0()); }
	'lasts'
	{ after(grammarAccess.getTaskAccess().getLastsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_2__1__Impl
	rule__Task__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDurationAssignment_2_1()); }
	(rule__Task__DurationAssignment_2_1)
	{ after(grammarAccess.getTaskAccess().getDurationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDurationUnitAssignment_2_2()); }
	(rule__Task__DurationUnitAssignment_2_2)
	{ after(grammarAccess.getTaskAccess().getDurationUnitAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_3__0__Impl
	rule__Task__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getFromKeyword_3_0()); }
	'from'
	{ after(grammarAccess.getTaskAccess().getFromKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getStartDateAssignment_3_1()); }
	(rule__Task__StartDateAssignment_3_1)
	{ after(grammarAccess.getTaskAccess().getStartDateAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_4__0__Impl
	rule__Task__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDueKeyword_4_0()); }
	'due'
	{ after(grammarAccess.getTaskAccess().getDueKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getEndDateAssignment_4_1()); }
	(rule__Task__EndDateAssignment_4_1)
	{ after(grammarAccess.getTaskAccess().getEndDateAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_5__0__Impl
	rule__Task__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getCommaKeyword_5_0()); }
	(',')?
	{ after(grammarAccess.getTaskAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_5__1__Impl
	rule__Task__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDependsKeyword_5_1()); }
	'depends'
	{ after(grammarAccess.getTaskAccess().getDependsKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_5__2__Impl
	rule__Task__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getOnKeyword_5_2()); }
	'on'
	{ after(grammarAccess.getTaskAccess().getOnKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDependencyAssignment_5_3()); }
	(rule__Task__DependencyAssignment_5_3)
	{ after(grammarAccess.getTaskAccess().getDependencyAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_6__0__Impl
	rule__Task__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_6_0()); }
	'{'
	{ after(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_6__1__Impl
	rule__Task__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getSubtasksAssignment_6_1()); }
	(rule__Task__SubtasksAssignment_6_1)
	{ after(grammarAccess.getTaskAccess().getSubtasksAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_6__2__Impl
	rule__Task__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_6_2()); }
	(rule__Task__Group_6_2__0)*
	{ after(grammarAccess.getTaskAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_6_3()); }
	'}'
	{ after(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_6_2__0__Impl
	rule__Task__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getSemicolonKeyword_6_2_0()); }
	';'
	{ after(grammarAccess.getTaskAccess().getSemicolonKeyword_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getSubtasksAssignment_6_2_1()); }
	(rule__Task__SubtasksAssignment_6_2_1)
	{ after(grammarAccess.getTaskAccess().getSubtasksAssignment_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Milestone__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Milestone__Group__0__Impl
	rule__Milestone__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMilestoneAccess().getMilestoneKeyword_0()); }
	'Milestone'
	{ after(grammarAccess.getMilestoneAccess().getMilestoneKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Milestone__Group__1__Impl
	rule__Milestone__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMilestoneAccess().getNameAssignment_1()); }
	(rule__Milestone__NameAssignment_1)
	{ after(grammarAccess.getMilestoneAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Milestone__Group__2__Impl
	rule__Milestone__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMilestoneAccess().getPlannedKeyword_2()); }
	'planned'
	{ after(grammarAccess.getMilestoneAccess().getPlannedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Milestone__Group__3__Impl
	rule__Milestone__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMilestoneAccess().getEndDateAssignment_3()); }
	(rule__Milestone__EndDateAssignment_3)
	{ after(grammarAccess.getMilestoneAccess().getEndDateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Milestone__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMilestoneAccess().getGroup_4()); }
	(rule__Milestone__Group_4__0)?
	{ after(grammarAccess.getMilestoneAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Milestone__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Milestone__Group_4__0__Impl
	rule__Milestone__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMilestoneAccess().getCommaKeyword_4_0()); }
	(',')?
	{ after(grammarAccess.getMilestoneAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Milestone__Group_4__1__Impl
	rule__Milestone__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMilestoneAccess().getDependsKeyword_4_1()); }
	'depends'
	{ after(grammarAccess.getMilestoneAccess().getDependsKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Milestone__Group_4__2__Impl
	rule__Milestone__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMilestoneAccess().getOnKeyword_4_2()); }
	'on'
	{ after(grammarAccess.getMilestoneAccess().getOnKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Milestone__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMilestoneAccess().getDependencyAssignment_4_3()); }
	(rule__Milestone__DependencyAssignment_4_3)
	{ after(grammarAccess.getMilestoneAccess().getDependencyAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__0__Impl
	rule__Dependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getMasterAssignment_0()); }
	(rule__Dependency__MasterAssignment_0)
	{ after(grammarAccess.getDependencyAccess().getMasterAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getGroup_1()); }
	(rule__Dependency__Group_1__0)*
	{ after(grammarAccess.getDependencyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group_1__0__Impl
	rule__Dependency__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getDependencyAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getMasterAssignment_1_1()); }
	(rule__Dependency__MasterAssignment_1_1)
	{ after(grammarAccess.getDependencyAccess().getMasterAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__0__Impl
	rule__Date__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); }
		(RULE_INT)
		{ after(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); }
	)
	(
		{ before(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); }
		(RULE_INT)*
		{ after(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__1__Impl
	rule__Date__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getDateAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__2__Impl
	rule__Date__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); }
		(RULE_INT)
		{ after(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); }
	)
	(
		{ before(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); }
		(RULE_INT)*
		{ after(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__3__Impl
	rule__Date__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getDateAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); }
		(RULE_INT)
		{ after(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); }
	)
	(
		{ before(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); }
		(RULE_INT)*
		{ after(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getProjectAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__TasksAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getTasksAbstractTaskParserRuleCall_2_0_0()); }
		ruleAbstractTask
		{ after(grammarAccess.getProjectAccess().getTasksAbstractTaskParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__TasksAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getTasksAbstractTaskParserRuleCall_2_1_1_0()); }
		ruleAbstractTask
		{ after(grammarAccess.getProjectAccess().getTasksAbstractTaskParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTaskAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__DurationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getDurationINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTaskAccess().getDurationINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__DurationUnitAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getDurationUnitDURATION_UNITEnumRuleCall_2_2_0()); }
		ruleDURATION_UNIT
		{ after(grammarAccess.getTaskAccess().getDurationUnitDURATION_UNITEnumRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__StartDateAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getStartDateDateParserRuleCall_3_1_0()); }
		ruleDate
		{ after(grammarAccess.getTaskAccess().getStartDateDateParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__EndDateAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getEndDateDateParserRuleCall_4_1_0()); }
		ruleDate
		{ after(grammarAccess.getTaskAccess().getEndDateDateParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__DependencyAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getDependencyDependencyParserRuleCall_5_3_0()); }
		ruleDependency
		{ after(grammarAccess.getTaskAccess().getDependencyDependencyParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__SubtasksAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getSubtasksAbstractTaskParserRuleCall_6_1_0()); }
		ruleAbstractTask
		{ after(grammarAccess.getTaskAccess().getSubtasksAbstractTaskParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__SubtasksAssignment_6_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getSubtasksAbstractTaskParserRuleCall_6_2_1_0()); }
		ruleAbstractTask
		{ after(grammarAccess.getTaskAccess().getSubtasksAbstractTaskParserRuleCall_6_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMilestoneAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMilestoneAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__EndDateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMilestoneAccess().getEndDateDateParserRuleCall_3_0()); }
		ruleDate
		{ after(grammarAccess.getMilestoneAccess().getEndDateDateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Milestone__DependencyAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMilestoneAccess().getDependencyDependencyParserRuleCall_4_3_0()); }
		ruleDependency
		{ after(grammarAccess.getMilestoneAccess().getDependencyDependencyParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__MasterAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getMasterAbstractTaskCrossReference_0_0()); }
		(
			{ before(grammarAccess.getDependencyAccess().getMasterAbstractTaskSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getDependencyAccess().getMasterAbstractTaskSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getDependencyAccess().getMasterAbstractTaskCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__MasterAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getMasterAbstractTaskCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getDependencyAccess().getMasterAbstractTaskSTRINGTerminalRuleCall_1_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getDependencyAccess().getMasterAbstractTaskSTRINGTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getDependencyAccess().getMasterAbstractTaskCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
