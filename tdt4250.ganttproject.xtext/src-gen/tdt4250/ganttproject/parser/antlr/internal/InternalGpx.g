/*
 * generated by Xtext 2.23.0
 */
grammar InternalGpx;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package tdt4250.ganttproject.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package tdt4250.ganttproject.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import tdt4250.ganttproject.services.GpxGrammarAccess;

}

@parser::members {

 	private GpxGrammarAccess grammarAccess;

    public InternalGpxParser(TokenStream input, GpxGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Project";
   	}

   	@Override
   	protected GpxGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProject
entryRuleProject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectRule()); }
	iv_ruleProject=ruleProject
	{ $current=$iv_ruleProject.current; }
	EOF;

// Rule Project
ruleProject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Project'
		{
			newLeafNode(otherlv_0, grammarAccess.getProjectAccess().getProjectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProjectAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectAccess().getTasksAbstractTaskParserRuleCall_2_0_0());
					}
					lv_tasks_2_0=ruleAbstractTask
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectRule());
						}
						add(
							$current,
							"tasks",
							lv_tasks_2_0,
							"tdt4250.ganttproject.Gpx.AbstractTask");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=';'
				{
					newLeafNode(otherlv_3, grammarAccess.getProjectAccess().getSemicolonKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProjectAccess().getTasksAbstractTaskParserRuleCall_2_1_1_0());
						}
						lv_tasks_4_0=ruleAbstractTask
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProjectRule());
							}
							add(
								$current,
								"tasks",
								lv_tasks_4_0,
								"tdt4250.ganttproject.Gpx.AbstractTask");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleAbstractTask
entryRuleAbstractTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractTaskRule()); }
	iv_ruleAbstractTask=ruleAbstractTask
	{ $current=$iv_ruleAbstractTask.current; }
	EOF;

// Rule AbstractTask
ruleAbstractTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractTaskAccess().getTaskParserRuleCall_0());
		}
		this_Task_0=ruleTask
		{
			$current = $this_Task_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractTaskAccess().getMilestoneParserRuleCall_1());
		}
		this_Milestone_1=ruleMilestone
		{
			$current = $this_Milestone_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	iv_ruleTask=ruleTask
	{ $current=$iv_ruleTask.current; }
	EOF;

// Rule Task
ruleTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Task'
		{
			newLeafNode(otherlv_0, grammarAccess.getTaskAccess().getTaskKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTaskAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_2='lasts'
			{
				newLeafNode(otherlv_2, grammarAccess.getTaskAccess().getLastsKeyword_2_0());
			}
			(
				(
					lv_duration_3_0=RULE_INT
					{
						newLeafNode(lv_duration_3_0, grammarAccess.getTaskAccess().getDurationINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaskRule());
						}
						setWithLastConsumed(
							$current,
							"duration",
							lv_duration_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskAccess().getDurationUnitDURATION_UNITEnumRuleCall_2_2_0());
					}
					lv_durationUnit_4_0=ruleDURATION_UNIT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskRule());
						}
						set(
							$current,
							"durationUnit",
							lv_durationUnit_4_0,
							"tdt4250.ganttproject.Gpx.DURATION_UNIT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='from'
			{
				newLeafNode(otherlv_5, grammarAccess.getTaskAccess().getFromKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskAccess().getStartDateDateParserRuleCall_3_1_0());
					}
					lv_startDate_6_0=ruleDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskRule());
						}
						set(
							$current,
							"startDate",
							lv_startDate_6_0,
							"tdt4250.ganttproject.Gpx.Date");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='due'
			{
				newLeafNode(otherlv_7, grammarAccess.getTaskAccess().getDueKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskAccess().getEndDateDateParserRuleCall_4_1_0());
					}
					lv_endDate_8_0=ruleDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskRule());
						}
						set(
							$current,
							"endDate",
							lv_endDate_8_0,
							"tdt4250.ganttproject.Gpx.Date");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getTaskAccess().getCommaKeyword_5_0());
				}
			)?
			otherlv_10='depends'
			{
				newLeafNode(otherlv_10, grammarAccess.getTaskAccess().getDependsKeyword_5_1());
			}
			otherlv_11='on'
			{
				newLeafNode(otherlv_11, grammarAccess.getTaskAccess().getOnKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskAccess().getDependencyDependencyParserRuleCall_5_3_0());
					}
					lv_dependency_12_0=ruleDependency
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskRule());
						}
						set(
							$current,
							"dependency",
							lv_dependency_12_0,
							"tdt4250.ganttproject.Gpx.Dependency");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskAccess().getSubtasksAbstractTaskParserRuleCall_6_1_0());
					}
					lv_subtasks_14_0=ruleAbstractTask
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskRule());
						}
						add(
							$current,
							"subtasks",
							lv_subtasks_14_0,
							"tdt4250.ganttproject.Gpx.AbstractTask");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=';'
				{
					newLeafNode(otherlv_15, grammarAccess.getTaskAccess().getSemicolonKeyword_6_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTaskAccess().getSubtasksAbstractTaskParserRuleCall_6_2_1_0());
						}
						lv_subtasks_16_0=ruleAbstractTask
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTaskRule());
							}
							add(
								$current,
								"subtasks",
								lv_subtasks_16_0,
								"tdt4250.ganttproject.Gpx.AbstractTask");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_6_3());
			}
		)?
	)
;

// Entry rule entryRuleMilestone
entryRuleMilestone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMilestoneRule()); }
	iv_ruleMilestone=ruleMilestone
	{ $current=$iv_ruleMilestone.current; }
	EOF;

// Rule Milestone
ruleMilestone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Milestone'
		{
			newLeafNode(otherlv_0, grammarAccess.getMilestoneAccess().getMilestoneKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMilestoneAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMilestoneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='planned'
		{
			newLeafNode(otherlv_2, grammarAccess.getMilestoneAccess().getPlannedKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMilestoneAccess().getEndDateDateParserRuleCall_3_0());
				}
				lv_endDate_3_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMilestoneRule());
					}
					set(
						$current,
						"endDate",
						lv_endDate_3_0,
						"tdt4250.ganttproject.Gpx.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMilestoneAccess().getCommaKeyword_4_0());
				}
			)?
			otherlv_5='depends'
			{
				newLeafNode(otherlv_5, grammarAccess.getMilestoneAccess().getDependsKeyword_4_1());
			}
			otherlv_6='on'
			{
				newLeafNode(otherlv_6, grammarAccess.getMilestoneAccess().getOnKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMilestoneAccess().getDependencyDependencyParserRuleCall_4_3_0());
					}
					lv_dependency_7_0=ruleDependency
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMilestoneRule());
						}
						set(
							$current,
							"dependency",
							lv_dependency_7_0,
							"tdt4250.ganttproject.Gpx.Dependency");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	iv_ruleDependency=ruleDependency
	{ $current=$iv_ruleDependency.current; }
	EOF;

// Rule Dependency
ruleDependency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getDependencyAccess().getMasterAbstractTaskCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getDependencyAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDependencyRule());
						}
					}
					otherlv_2=RULE_STRING
					{
						newLeafNode(otherlv_2, grammarAccess.getDependencyAccess().getMasterAbstractTaskCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDate
entryRuleDate returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	iv_ruleDate=ruleDate
	{ $current=$iv_ruleDate.current.getText(); }
	EOF;

// Rule Date
ruleDate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_INT_0=RULE_INT
			{
				$current.merge(this_INT_0);
			}
			{
				newLeafNode(this_INT_0, grammarAccess.getDateAccess().getINTTerminalRuleCall_0());
			}
		)+
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDateAccess().getFullStopKeyword_1());
		}
		(
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getDateAccess().getINTTerminalRuleCall_2());
			}
		)+
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDateAccess().getFullStopKeyword_3());
		}
		(
			this_INT_4=RULE_INT
			{
				$current.merge(this_INT_4);
			}
			{
				newLeafNode(this_INT_4, grammarAccess.getDateAccess().getINTTerminalRuleCall_4());
			}
		)+
	)
;

// Rule DURATION_UNIT
ruleDURATION_UNIT returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='day'
			{
				$current = grammarAccess.getDURATION_UNITAccess().getDAYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDURATION_UNITAccess().getDAYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='days'
			{
				$current = grammarAccess.getDURATION_UNITAccess().getDAYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDURATION_UNITAccess().getDAYEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='week'
			{
				$current = grammarAccess.getDURATION_UNITAccess().getWEEKEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDURATION_UNITAccess().getWEEKEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='weeks'
			{
				$current = grammarAccess.getDURATION_UNITAccess().getWEEKEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDURATION_UNITAccess().getWEEKEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
